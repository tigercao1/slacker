{"version":3,"sources":["components/Home/Home.js","utils/tabs.js","components/NavBar/NavBar.js","utils/utils.js","components/LeisureCard/LeisureCard.js","components/LeisureList/LeisureList.js","components/Tabs/LeisureTab/LeisureTab.js","components/Tabs/StrictTab/StrictTab.js","utils/api.js","controllers/UserController.js","components/Tabs/UserTab/UserTab.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","render","setRender","className","onAnimationEnd","handleUnmount","data-cy","onClick","icon","tabs","LEISURE","STRICT","USER","Object","freeze","NavBar","handleShowTab","tab","setCurrentTab","currentTab","ms","pad","time","digit","slice","objList","type","reduce","sum","obj","LeisureCard","id","name","setName","milliseconds","setMilliseconds","utils","setTime","timerOn","setTimerOn","timerId","useRef","nameInput","useEffect","current","clearInterval","currentActiveCardId","updateObjTime","mostRecentAddedCardId","focus","handleDeleteItem","currentActiveCardType","ref","defaultValue","onBlur","currName","value","handleNameChange","onFocus","e","target","select","onKeyDown","keyCode","blur","handleCurrentActive","startTime","Date","now","setInterval","Math","floor","updateTotalTime","LeisureList","timerObjList","totalTime","setTotalTime","timerCardList","charAt","toUpperCase","handleAddCard","handlePauseAll","handleResetAll","map","card","cardList","LeisureTab","localTimerCards","JSON","parse","localStorage","getItem","nanoid","setTimerCardList","setCurrentActiveCardId","setCurrentActiveCardType","setMostRecentAddedCardId","setItem","stringify","tempList","newCard","push","find","filter","item","i","leisureList","StrictTab","axios","create","baseURL","env","API_PROTOCOL","API_HOST","API_PORT","responseType","timeout","UserController","this","register","bind","body","a","api","post","data","UserTab","userController","useForm","handleSubmit","userRegister","setUserRegister","onSubmit","placeholder","required","login","library","add","faTimes","faPlay","faPause","faUndo","faPlus","faChevronRight","faUser","App","showHome","setShowHome","show","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b70c9d50.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './Home.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Home = (props) => {\n    const [render, setRender] = useState(true);\n\n    const onAnimationEnd = () => {\n        if (!render) {\n            props.handleUnmount();\n        }\n    }\n\n    const handleUnmount = () => {\n        setRender(false);\n    };\n\n    return (\n        <div \n            className={\"home-body \" + (render ? \"mount\" : \"unmount\")}\n            onAnimationEnd={onAnimationEnd}\n        >\n            <div className=\"spacer\"></div>\n            <div className=\"content\">\n                <h1>Slacker</h1>\n                <div data-cy=\"home-button\" className=\"btn home\" onClick={handleUnmount}><FontAwesomeIcon icon=\"chevron-right\"/></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","// Js Enums\nconst tabs = { LEISURE: \"leisure\", STRICT: \"strict\", USER: \"user\" };\n\nObject.freeze(tabs);\n\nexport default tabs;","import './NavBar.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport tabs from './../../utils/tabs';\n\nconst NavBar = (props) => {\n\n    const handleShowTab = (tab) => {\n        props.setCurrentTab(tab);\n    }\n\n    return (\n        <div className=\"navbar\">\n            <div className=\"tabs\">\n                <div\n                    data-cy=\"leisure-tab\"\n                    className={props.currentTab === tabs.LEISURE ? \"tab selected\" : \"tab unselected\"} \n                    onClick={() => handleShowTab(tabs.LEISURE)}\n                >\n                    Leisure\n                </div>\n                <div \n                    data-cy=\"strict-tab\"\n                    className={props.currentTab === tabs.STRICT ? \"tab selected\" : \"tab unselected\"} \n                    onClick={() => handleShowTab(tabs.STRICT)}\n                >\n                    Strict\n                </div>\n            </div>\n            <div className=\"options\">\n                <div\n                    data-cy=\"user-tab\"\n                    className={props.currentTab === tabs.USER ? \"user-icon selected\" : \"user-icon unselected\"} \n                    onClick={() => handleShowTab(tabs.USER)}\n                >\n                    <FontAwesomeIcon icon=\"user\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar;","const msToTime = (ms) => {\n    let pad = (time, digit = 2) => ('00' + time).slice(-digit);\n    return pad(ms/3.6e6 | 0) + ':' + pad((ms%3.6e6)/6e4 | 0) + ':' + pad((ms%6e4)/1000 | 0) + '.' + pad(ms%1000, 3);\n}\n\nconst calculateTotalTime = (objList, type) => {\n    return objList.reduce((sum, obj) => {\n        return obj.type === type ? sum + obj.time : sum + 0;\n    }, 0);\n};\n\nexport default {\n    msToTime,\n    calculateTotalTime\n}","import { useEffect, useRef, useState } from \"react\";\nimport './LeisureCard.scss';\nimport utils from '../../utils/utils';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst LeisureCard = (props) => {\n\n    const id = props.id;\n    const type = props.type;\n    const [name, setName] = useState(props.name ? props.name : \"Time-Card-\" + props.id);\n    const [milliseconds, setMilliseconds] = useState(props.time);\n    const [time, setTime] = useState(utils.msToTime(0));\n    const [timerOn, setTimerOn] = useState(false);\n    const [render, setRender] = useState(true);\n    const timerId = useRef(''); // Reference to the timer interval\n    const nameInput = useRef();\n\n    useEffect(() => {\n        // Clear interval on timer pause\n        if (!timerOn && timerId.current) {\n            clearInterval(timerId.current);\n        }\n\n        // When the current active timer card is not the current card, pause the timer on the current card\n        // To achieve when starting another card, the previous running card is paused\n        if (timerOn && props.currentActiveCardId !== id) {\n            setTimerOn(false);\n            // To update the time for the current timer object\n            props.updateObjTime(id, milliseconds)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timerOn, props.currentActiveCardId, id])\n\n    useEffect(() => {\n        // When this card is the current active card, focus on the name input\n        // To give the user the ability to edit card name on add\n        if (props.mostRecentAddedCardId && props.mostRecentAddedCardId === id) {\n            nameInput.current.focus();\n        }\n    }, [id, props.mostRecentAddedCardId])\n\n    useEffect(() => {\n        // Setting the display time\n        setTime(utils.msToTime(milliseconds));\n    }, [milliseconds])\n\n    useEffect(() => {\n        // Since time is stored as milliseconds\n        // Trigger rerender when the timer object is updated to avoid sychornization issues\n        setMilliseconds(props.time);\n    }, [props.time])\n\n    const emitNameChange = () => {\n        let currName = nameInput.current.value;\n        if (currName && currName !== name) {\n            setName(currName);\n            props.handleNameChange(id, currName);\n        }\n    }\n\n    const handleFocus = (e) => {\n        e.target.select();\n    }\n\n    const handleStart = () => {\n        if (!timerOn) {\n            props.handleCurrentActive(id, type);\n            setTimerOn(true);\n            // Get initial time\n            let startTime = Date.now();\n            // Check current time against the initial time, update every 10 ms\n            timerId.current = setInterval(() => {\n                let time = Math.floor((Date.now() - startTime))\n                setMilliseconds(milliseconds + time);\n                // Update the accumulated total time\n                props.updateTotalTime(time, type)\n            }, 10);\n        }\n    }\n\n    const handlePause = () => {\n        setTimerOn(false);\n        props.handleCurrentActive(null, null);\n        // Update timer object on pause\n        props.updateObjTime(id, milliseconds)\n    }\n\n    const handleDeleteItem = () => {\n        // Render triggers element class change for an unmount animation\n        setRender(false);\n    }\n\n    const handleKeypress = (e) => {\n        let currName = name;\n        // Handle Enter keypress\n        if (e.keyCode === 13) {\n            nameInput.current.blur();\n        // Handle Escape keypress\n        } else if (e.keyCode === 27) {\n            nameInput.current.value = currName;\n            nameInput.current.blur();\n        }\n    }\n\n    const handleAnimationEnd = () => {\n        // Actual delete item logic on animation end\n        if (!render) {\n            props.handleDeleteItem(id);\n        }\n    }\n\n    return (\n        <div className={\"leisure-card \" + (render ? \"mount\" : \"unmount\")} onAnimationEnd={handleAnimationEnd}>\n            <FontAwesomeIcon \n                data-cy=\"delete\"\n                icon=\"times\" \n                className={!timerOn && props.currentActiveCardType !== type ? \"delete function\" : \"delete disabled\"} \n                onClick={handleDeleteItem}\n            />\n            <input\n                data-cy=\"name\"\n                className=\"card-title\" \n                ref={nameInput} \n                defaultValue={name}\n                onBlur={emitNameChange} \n                onFocus={handleFocus}\n                onKeyDown={handleKeypress}\n            ></input>\n            <div className=\"time-group\">\n                <div data-cy=\"time\" className=\"time\">{time}</div>\n                {\n                    timerOn ?\n                    <div data-cy=\"pause\" className=\"btn function\" onClick={handlePause}><FontAwesomeIcon icon=\"pause\"/></div> :\n                    <div data-cy=\"play\" className=\"btn function\" onClick={handleStart}><FontAwesomeIcon icon=\"play\"/></div>\n                }\n            </div>\n            <div data-cy=\"notify\" className=\"sound\">Notify</div>\n        </div>\n    )\n}\n\nexport default LeisureCard;","import { useEffect, useState } from 'react';\nimport utils from '../../utils/utils';\nimport LeisureCard from '../LeisureCard/LeisureCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './LeisureList.scss';\n\nconst LeisureList = (props) => {\n\n    const type = props.type;\n\n    // Initialize total time with pre-defined object list or retreive from localstorage\n    const [totalTime, setTotalTime] = useState(utils.calculateTotalTime(props.timerObjList, type));\n\n    useEffect(() => {\n        // Trigger rerender when the timer object is updated to avoid sychornization issues\n        setTotalTime(utils.calculateTotalTime(props.timerCardList, type));\n    }, [props.timerCardList, type]);\n\n    const updateTotalTime = (ms, type) => {\n        setTotalTime(totalTime + ms);\n    };\n\n    const cardList = (type) => {\n        return (\n            props.timerCardList.map((card) => {\n                return (\n                    card.type === type &&\n                    <LeisureCard \n                        key={card.id}\n                        name={card.name}\n                        id={card.id}\n                        time={card.time}\n                        type={card.type}\n                        handleCurrentActive={props.handleCurrentActive}\n                        handleNameChange={props.handleNameChange}\n                        currentActiveCardId={props.currentActiveCardId}\n                        currentActiveCardType={props.currentActiveCardType}\n                        mostRecentAddedCardId={props.mostRecentAddedCardId}\n                        updateTotalTime={updateTotalTime}\n                        updateObjTime={props.updateObjTime}\n                        handleDeleteItem={props.handleDeleteItem}\n                    ></LeisureCard>\n                )\n            })\n        )\n    }\n\n    return (\n        <div id={type} className=\"column\">\n            <div className=\"leisure-header\">\n                <div className=\"title\">\n                    <div data-cy={\"list-title-\" + type} className=\"text\">{type.charAt(0).toUpperCase() + type.slice(1)}</div>\n                    <div \n                        data-cy={\"add-card-\" + type} \n                        className=\"btn function\" \n                        onClick={() => props.handleAddCard(type)}\n                    >\n                        <FontAwesomeIcon icon=\"plus\"/>\n                    </div>\n                </div>\n                <div className=\"total-time\">\n                    <div data-cy={\"total-time-\" + type} className=\"time\">{utils.msToTime(totalTime)}</div>\n                    <div className=\"btn-group\">\n                        <div \n                            data-cy={\"pause-all-\" + type}\n                            className={props.currentActiveCardType === type ? \"btn function\" : \"btn disabled\"} \n                            onClick={props.handlePauseAll}\n                        >\n                            <FontAwesomeIcon icon=\"pause\"/>\n                        </div>\n                        <div \n                            data-cy={\"reset-all-\" + type}\n                            className={props.currentActiveCardType === type ? \"btn disabled\" : \"btn function\"} \n                            onClick={() => props.handleResetAll(type)}\n                        >\n                            <FontAwesomeIcon icon=\"undo\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div data-cy={\"leisure-card-list-\" + type} className=\"body\">\n                { cardList(type) }\n            </div>\n        </div>\n    )\n}\n\nexport default LeisureList;","import LeisureList from '../../LeisureList/LeisureList';\nimport './LeisureTab.scss';\nimport { nanoid } from 'nanoid';\nimport { useEffect, useState } from 'react';\n\nconst LeisureTab = () => {\n\n    const localTimerCards = JSON.parse(localStorage.getItem(\"timerCards\"));\n\n    const timerObjList = localTimerCards ? localTimerCards : [\n        {\n            name: \"\",\n            id: nanoid(6),\n            time: 0,\n            type: \"work\"\n        },\n        {\n            name: \"\",\n            id: nanoid(6),\n            time: 0,\n            type: \"slack\"\n        }\n    ];\n\n    const [timerCardList, setTimerCardList] = useState(timerObjList);\n    const [currentActiveCardId, setCurrentActiveCardId] = useState(null);\n    const [currentActiveCardType, setCurrentActiveCardType] = useState(null);\n    const [mostRecentAddedCardId, setMostRecentAddedCardId] = useState(null);\n\n    useEffect(() => {\n        localStorage.setItem(\"timerCards\", JSON.stringify(timerCardList));\n    }, [timerCardList])\n\n    const handleAddCard = (type) => {\n        let tempList = [...timerCardList];\n        let newCard = {\n            name: \"\",\n            id: nanoid(6),\n            time: 0,\n            type: type\n        };\n        tempList.push(newCard);\n        setMostRecentAddedCardId(newCard.id);\n        setTimerCardList(tempList);\n    };\n\n    // Handler to set current active card id and card type\n    const handleCurrentActive = (id, type) => {\n        setCurrentActiveCardId(id);\n        setCurrentActiveCardType(type);\n    };\n\n    const handleNameChange = (id, name) => {\n        let tempList = [...timerCardList];\n        let targetCard = tempList.find(card => card.id === id);\n        targetCard.name = name;\n        setTimerCardList(tempList);\n        setMostRecentAddedCardId(null);\n    };\n\n    // Update the time of the timer object with given id\n    const updateObjTime = (id, ms) => {\n        let tempList = [...timerCardList];\n        let targetCard = tempList.find(card => card.id === id);\n        targetCard.time = ms;\n        setTimerCardList(tempList);\n    }\n\n    const handleDeleteItem = (id) => {\n        let tempList = [...timerCardList];\n        setTimerCardList(tempList.filter((item) => {\n            return item.id !== id;\n        }));\n    }\n\n    const handlePauseAll = () => {\n        handleCurrentActive(null, null);\n    }\n\n    // Handler to reset all the timer of given type\n    const handleResetAll = (type) => {\n        let tempList = [...timerCardList]\n        for (let i in tempList) {\n            if (tempList[i].type === type) {\n                tempList[i].time = 0;\n            }\n        }\n        setTimerCardList(tempList);\n    }\n\n    const leisureList = (type) => {\n        return (\n            <LeisureList\n                type={type}\n                handleCurrentActive={handleCurrentActive}\n                handleNameChange={handleNameChange}\n                currentActiveCardId={currentActiveCardId}\n                currentActiveCardType={currentActiveCardType}\n                mostRecentAddedCardId={mostRecentAddedCardId}\n                updateObjTime={updateObjTime}\n                handleDeleteItem={handleDeleteItem}\n                handlePauseAll={handlePauseAll}\n                handleResetAll={handleResetAll}\n                handleAddCard={handleAddCard}\n                timerObjList={timerObjList}\n                timerCardList={timerCardList}\n            ></LeisureList>\n        )\n    }\n\n    return (\n        <div className=\"leisure\">\n            {leisureList(\"work\")}\n            {leisureList(\"slack\")}\n        </div>\n    )\n};\n\nexport default LeisureTab;","import './StrictTab.scss';\n\nconst StrictTab = (props) => {\n    return (\n        <div className=\"strict\">\n            <h1>Coming soon</h1>\n        </div>\n    )\n}\n\nexport default StrictTab;","import axios from 'axios';\nimport env from 'dotenv';\n\n// Initialize axios with host info\n\nexport default axios.create({\n    baseURL: env.API_PROTOCOL + \"://\" + env.API_HOST + (env.API_PORT !== null ? \":\" + env.API_PORT : \"\"),\n    responseType: \"json\",\n    timeout: 5000\n});","import api from './../utils/api';\n\nclass UserController {\n    constructor() {\n        this.register = this.register.bind(this);\n    }\n\n    async register(body) {\n        let data = await api.post('/users/signup', {\n            body: body\n        });\n        return data;\n    }\n}\n\nexport default UserController;","import './UserTab.scss';\nimport { useForm } from \"react-hook-form\";\nimport UserController from '../../../controllers/UserController';\nimport { useState } from 'react';\n\nconst UserTab = (props) => {\n    const userController = new UserController();\n\n    const { register, handleSubmit } = useForm();\n    const handleLogin = (data) => {\n         userController.login(data);\n    }\n\n    const handleRegister = (data) => {\n        userController.register(data);\n    }\n\n    const [userRegister, setUserRegister] = useState(false);\n\n    return (\n        <>\n            {\n                !userRegister ?\n                <form data-cy=\"login-form\" onSubmit={handleSubmit(handleLogin)}>\n                    <input name=\"username\" type=\"email\" placeholder=\"example@mail.com\" ref={register({ required: true })} />\n                    <input name=\"password\" type=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\n                    <div className=\"btn-group\">\n                        <input type=\"submit\" value=\"Login\"/>\n                        <div className=\"link\" onClick={() => setUserRegister(true)}>Register</div>\n                    </div>\n                </form> :\n                <form data-cy=\"register-form\" onSubmit={handleSubmit(handleRegister)}>\n                    <input name=\"username\" type=\"email\" placeholder=\"example@mail.com\" ref={register({ required: true })} />\n                    <input name=\"password\" type=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\n                    <div className=\"btn-group\">\n                        <input type=\"submit\" value=\"Register\"/>\n                        <div className=\"link\" onClick={() => setUserRegister(false)}>Already have an account? Login</div>\n                    </div>\n                </form>\n            }\n        </>\n    )\n}\nexport default UserTab;","import { useState } from 'react';\nimport './App.scss';\nimport Home from './components/Home/Home';\nimport NavBar from './components/NavBar/NavBar';\nimport { LeisureTab, StrictTab, UserTab } from './components/Tabs';\nimport tabs from './utils/tabs'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTimes, faPlay, faPause, faUndo, faPlus, faChevronRight, faUser } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTimes, faPlay, faPause, faUndo, faPlus, faChevronRight, faUser);\n\nfunction App() {\n    const [showHome, setShowHome] = useState(true);\n    const [currentTab, setCurrentTab] = useState(tabs.LEISURE);\n\n    const handleUnmount = () => {\n        setShowHome(false);\n    }\n\n    return (\n        <div className=\"App\">\n            { \n                showHome ?\n                <Home show={showHome} handleUnmount={handleUnmount}></Home> :\n                <div className=\"app-body\">\n                    <NavBar currentTab={currentTab} setCurrentTab={setCurrentTab}></NavBar>\n                    {\n                        currentTab === tabs.LEISURE ? <LeisureTab></LeisureTab> :\n                        currentTab === tabs.STRICT ? <StrictTab></StrictTab> :\n                        currentTab === tabs.USER ? <UserTab></UserTab> : <></>\n                    }\n                </div>\n            }\n                \n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}